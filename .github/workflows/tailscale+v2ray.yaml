name: Tailscale+V2ray

# 注意事项：
# 1. 应当指定每个任务的持续时间和开始时间，例如设置 schedule.cron 属性让任务每个小时自动运行一次，每次运行时间 60分钟 （由 "Start V2ray" 中的 timeout-minutes 指定）
# 2. 应当确保 IP_ASSIGNMENT
# 
on:
  workflow_dispatch:
  # 取消注释以启用定时任务（默认每小时），具体生成可参考 https://www.freeformatter.com/cron-expression-generator-quartz.html
  # schedule:
  #  - cron: "0 0 * ? * *"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Tailscale
        run: |
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/focal.gpg | sudo apt-key add -
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/focal.list | sudo tee /etc/apt/sources.list.d/tailscale.list
          sudo apt-get update
          sudo apt-get install tailscale

      - name: Start Tailscale
        env:
          # 如果修改了 IP_ASSIGNMENT，那么对于 clash 配置的服务器地址也应当同步。
          HOST_NAME: ljc-tailscale-host
          TAILSCALE_TOKEN: ${{ secrets.TAILSCALE_TOKEN }}
        run: |
          sudo tailscale login --authkey=$TAILSCALE_TOKEN 
          sudo tailscale up --advertise-exit-node
          sudo tailscale set --hostname="$HOST_NAME"  
      - name: Start V2ray
        # 每次运行时间 359分钟
        timeout-minutes: 5
        env:
          V2RAY_CONFIG_JSON: ${{ secrets.V2RAY_CONFIG_JSON }}
        run: |
          echo $V2RAY_CONFIG_JSON > v2ray-runtime-config.json
          docker run --network=host --name v2ray -v ${{ github.workspace }}/v2ray-runtime-config.json:/etc/v2fly/config.json -p 10086:10086 v2fly/v2fly-core run -c /etc/v2fly/config.json

      - name: Immediately Cleanup
        if: always()
        run: |
          echo "Move device node"
          chmod 777 ${{ github.workspace }}/movedevice.sh
          ${{ github.workspace }}/movedevice.sh
          echo "Immediately Cleanup"
          sudo tailscale logout
